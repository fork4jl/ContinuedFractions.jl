var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ContinuedFractions","category":"page"},{"location":"#ContinuedFractions","page":"Home","title":"ContinuedFractions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ContinuedFractions.","category":"page"},{"location":"#Function-Index","page":"Home","title":"Function Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This list is generated automatically, which may contain some internal unexported functions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Function-Docs","page":"Home","title":"Function Docs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [ContinuedFractions]","category":"page"},{"location":"#ContinuedFractions.ContinuedFractions","page":"Home","title":"ContinuedFractions.ContinuedFractions","text":"This module provides functionality for working with continued fractions.\n\n\n\n\n\n","category":"module"},{"location":"#ContinuedFractions.ContinuedFraction","page":"Home","title":"ContinuedFractions.ContinuedFraction","text":"struct ContinuedFraction{T}  where {T<:Integer} end\n\nContinuedFraction(qs::Vector{T}) where {T<:Integer}\nContinuedFraction(rat::Rational{T}) where {T<:Integer}\nContinuedFraction(x::AbstractFloat)\nContinuedFraction(x::Integer)\n\nA type representing a continued fraction with integer quotients.\n\nFields\n\nThe fields of a structure are not part of the public API. Please use helper functions to access them, such as quotients.\n\nExamples\n\njulia> ContinuedFraction([1])\nContinuedFraction{Int64}([1])\n\njulia> ContinuedFraction(1)\nContinuedFraction{Int64}([1])\n\njulia> ContinuedFraction(10)\nContinuedFraction{Int64}([10])\n\njulia> ContinuedFraction(3.14)\nContinuedFraction{Int64}([3, 7, 7])\n\njulia> ContinuedFraction(big\"1\"/10)\nContinuedFraction{BigInt}(BigInt[0, 10])\n\n\n\n\n\n","category":"type"},{"location":"#ContinuedFractions.convergents-Tuple{ContinuedFraction}","page":"Home","title":"ContinuedFractions.convergents","text":"convergents(cf::ContinuedFraction) -> ConvergentIterator\nconvergents(qs::Vector{<:Integer}) -> ConvergentIterator\nconvergents(x::Real) -> ConvergentIterator\n\nCompute the convergents of a input.\n\nReturns\n\nConvergentIterator: An iterator over the convergents of the continued fraction.\n\nExamples\n\njulia> convergents([0])\nConvergentIterator{Int64}([0])\n\njulia> convergents(3)\nConvergentIterator{Int64}([3])\n\njulia> convergents(22/7)\nConvergentIterator{Int64}([3, 7])\n\njulia> convergents(355/113)\nConvergentIterator{Int64}([3, 7, 16])\n\njulia> convergents(3.1415926)\nConvergentIterator{Int64}([3, 7, 15, 1, 243, 1, 1, 9, 1, 1, 4])\n\n\n\n\n\n","category":"method"},{"location":"#ContinuedFractions.quotients-Tuple{ContinuedFraction}","page":"Home","title":"ContinuedFractions.quotients","text":"quotients(cf::ContinuedFraction) -> Vector{T}\n\nReturn the quotients of the given ContinuedFraction object cf.\n\nReturns\n\nA vector containing the quotients of the continued fraction.\n\nExamples\n\njulia> quotients(ContinuedFraction(10))\n1-element Vector{Int64}:\n 10\n\njulia> quotients(ContinuedFraction(3.14))\n3-element Vector{Int64}:\n 3\n 7\n 7\n\njulia> quotients(ContinuedFraction(big\"1\"/10))\n2-element Vector{BigInt}:\n  0\n 10\n\n\n\n\n\n","category":"method"}]
}
